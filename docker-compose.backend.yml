services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DATABASE_ROOT_PASSWORD}
      MYSQL_DATABASE: monitoring_db
      MYSQL_USER: ${DATABASE_USERNAME}
      MYSQL_PASSWORD: ${DATABASE_PASSWORD}
      TZ: ${TZ}
    volumes:
      - ./db/mysql/data:/var/lib/mysql
      - ./db/mysql/config:/etc/mysql/conf.d
      - ./db/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - monitoring_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -p$$${DATABASE_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-backend:
    build:
      context: .
      dockerfile: api-backend/Dockerfile
    container_name: api-backend
    ports:
      - "8004:8004"
    environment:
      - TZ=${TZ}
      - DATABASE_URL=jdbc:mysql://mysql-db:3306/monitoring_db?useSSL=false&allowPublicKeyRetrieval=true
      - DATABASE_USERNAME=${DATABASE_USERNAME}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - SOCKET_ALLOWED_ADDR=${SOCKET_ALLOWED_ADDR}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
    networks:
      - monitoring_network
    depends_on:
      mysql-db:
        condition: service_healthy

networks:
  monitoring_network:
    external: true